<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="92330" started-at="2018-03-19T23:40:14Z" finished-at="2018-03-19T23:41:46Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="92330" started-at="2018-03-19T23:40:14Z" finished-at="2018-03-19T23:41:46Z">
      <class name="in.licious.test.FishandSeafoodCOD">
        <test-method status="PASS" signature="initFramework()[pri:0, instance:in.licious.test.FishandSeafoodCOD@3abbfa04]" name="initFramework" is-config="true" duration-ms="120" started-at="2018-03-20T05:10:14Z" finished-at="2018-03-20T05:10:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initFramework -->
        <test-method status="PASS" signature="initGlobalConstants()[pri:0, instance:in.licious.test.FishandSeafoodCOD@3abbfa04]" name="initGlobalConstants" is-config="true" duration-ms="0" started-at="2018-03-20T05:10:14Z" finished-at="2018-03-20T05:10:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initGlobalConstants -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:in.licious.test.FishandSeafoodCOD@3abbfa04]" name="setUp" is-config="true" duration-ms="11559" started-at="2018-03-20T05:10:14Z" finished-at="2018-03-20T05:10:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void in.licious.test.FishandSeafoodCOD.testmarinadescod()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testmarinadescod()[pri:4, instance:in.licious.test.FishandSeafoodCOD@3abbfa04]" name="testmarinadescod" duration-ms="78132" started-at="2018-03-20T05:10:26Z" finished-at="2018-03-20T05:11:44Z">
          <exception class="org.openqa.selenium.ScriptTimeoutException">
            <message>
              <![CDATA[asynchronous script timeout: result was not received in 30 seconds
  (Session info: chrome=64.0.3282.186)
  (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z'
System info: host: 'PF0Q7VST-BLR', ip: '192.168.43.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptSslCerts: true, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.33.506120 (e3e53437346286..., userDataDir: C:\Users\VISHWA\AppData\Loc...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 64.0.3282.186, webStorageEnabled: true}
Session ID: 63e3e4939a81cf5cdaf723e8885a6b94]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ScriptTimeoutException: asynchronous script timeout: result was not received in 30 seconds
  (Session info: chrome=64.0.3282.186)
  (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z'
System info: host: 'PF0Q7VST-BLR', ip: '192.168.43.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptSslCerts: true, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.33.506120 (e3e53437346286..., userDataDir: C:\Users\VISHWA\AppData\Loc...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 64.0.3282.186, webStorageEnabled: true}
Session ID: 63e3e4939a81cf5cdaf723e8885a6b94
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
	at org.openqa.selenium.remote.RemoteWebDriver.executeAsyncScript(RemoteWebDriver.java:555)
	at in.licious.util.Helper.scrollBar(Helper.java:147)
	at in.licious.test.FishandSeafoodCOD.testmarinadescod(FishandSeafoodCOD.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ScriptTimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testmarinadescod -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:in.licious.test.FishandSeafoodCOD@3abbfa04]" name="tearDown" is-config="true" duration-ms="2098" started-at="2018-03-20T05:11:44Z" finished-at="2018-03-20T05:11:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testmarinadescod status=FAILURE method=FishandSeafoodCOD.testmarinadescod()[pri:4, instance:in.licious.test.FishandSeafoodCOD@3abbfa04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="closeFramework()[pri:0, instance:in.licious.test.FishandSeafoodCOD@3abbfa04]" name="closeFramework" is-config="true" duration-ms="402" started-at="2018-03-20T05:11:46Z" finished-at="2018-03-20T05:11:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeFramework -->
      </class> <!-- in.licious.test.FishandSeafoodCOD -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
